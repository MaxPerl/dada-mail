=head2 Dada Mail Specific File Formats

The File Formats for much of Dada Mail's list settings, archives, etc are very basic. Having other programs read the information and use it should be relatively easy. 

=head2 List Subscribers

Currently, Dada Mail is shipped with support for three different types of backends for the subscription list. They are: 

=head2 Postgres

Dada Mail also supports a Postgres based subscription list backend. 

The specific table schema is described in the I<dada/extras/SQL/dada_subscribers.sql> file in the Dada Mail distribution. 

=over

=item * email_id

is an auto-generated ID number

=item * email

Holds the actual email address

=item * list 

Holds the listshortname the email address is subscribed to

=item * list_type

Holds either, I<list>, I<black_list> or <invite_list> (see the PlainText docs above)

=item * list_status     

Almost always is set to, B<1>. Setting it to something else won't have an affect you may intend. 

=back

=head2 MySQL

Dada Mail also supports a MySQL based subscription list backend. 

The specific table schema is described in the I<ada/extras/SQL/dada_subscribers.mysql> file in the Dada Mail distribution. 

The fields in the schema play the same role as what's described for Postgres, although their structure is slightly different, given the differences of the two SQL products.


=head2 See Also: 

=over

=item * DADA::MailingList::Subscribers

L<https://dadamailproject.com/support/documentation/MailingList_Subscribers.pm.html>

=back


=head2 List Settings

Currently, Dada Mail is shipped with support for three different types of backends for the List Settings. They are: 


=head2 Postgres

Dada Mail also supports a Postgres based list settings backend. 

The specific table schema is described in the I<dada/extras/SQL/dada_settings.sql> file in the Dada Mail distribution. 


=over

=item * list

The list shortname associated with the list setting.

=item * setting

The Name of the list setting

=item * value the value of the list setting

=back


=head2 MySQL

Dada Mail also supports a MySQL based list settings backend. 

The specific table schema is described in the I<ada/extras/SQL/dada_settings.mysql> file in the Dada Mail distribution. 

The fields in the schema play the same role as what's described for Postgres, although their structure is slightly different, given the differences of the two SQL products.

See Also: 

=over

=item * DADA::MailingList::Settings

L<https://dadamailproject.com/support/documentation/MailingList_Settings.pm.html>

=item * DADA::MailingList::Settings::Db

L<https://dadamailproject.com/support/documentation/MailingList_Settings_Db.pm.html>

=item * DADA::MailingList::Settings::baseSQL

L<https://dadamailproject.com/support/documentation/MailingList_Settings_baseSQL.pm.html>

=item * DADA::MailingList::Settings::MySQL

L<https://dadamailproject.com/support/documentation/MailingList_Settings_MySQL.pm.html>

=back

=head2 Message Archives

Currently, Dada Mail is shipped with support for three different types of backends for the message archives. They are: 



=head2 Postgres

Dada Mail also supports a Postgres based archive backend. 

The specific table schema is described in the I<dada/extras/SQL/dada_archives.sql> file in the Dada Mail distribution. 


=over

=item * list

The list shortname associated with the archived message.

=item * archive_id                   

Similar to the keys of the DBM-based backend. 

=item * subject                      

The Subject of the message. This field is not necessarily filled in as the, B<raw_msg> contains this information as well. Part of the table for backwards-compatibility.

=item * message      

A simplified version of the Message Body. Not necessarilly filled in, as the B<raw_msg> field contains this information as well. Part of the table for backwards-compatibility

=item * format                        

A simplified version of the Message Content-Type. Not necessarilly filled in, as the B<raw_msg> field contains this information as well. Part of the table for backwards compatibility. 

=item * raw_msg                       

Containts the complete email message, including the email message headers. 

=back


A main advantage of using the SQL-based backend is that it suffers from almost none of the shortcomings of the DBM-based backend, save for the message-id collision problem. 


=head2 MySQL

Dada Mail also supports a MySQL based archive backend. 

The specific table schema is described in the I<ada/extras/SQL/dada_archives.mysql> file in the Dada Mail distribution. 

The fields in the schema play the same role as what's described for Postgres, although their structure is slightly different, given the differences of the two SQL products.


See Also: 

=over

=item * DADA::MailingList::Archives

L<https://dadamailproject.com/support/documentation/MailingList_Archives.pm.html>

=item * DADA::MailingList::Archives::Db

L<https://dadamailproject.com/support/documentation/MailingList_Archives_Db.pm.html>

=item * DADA::MailingList::Archives::baseSQL

L<https://dadamailproject.com/support/documentation/MailingList_Archives_baseSQL.pm.html>

=item * DADA::MailingList::Archives::MySQL

L<https://dadamailproject.com/support/documentation/MailingList_Archives_MySQL.pm.html>


=item * DADA::MailingList::Archives::PostgreSQL

L<https://dadamailproject.com/support/documentation/MailingList_Archives_PostgreSQL.pm.html>

=back

=head2 Backups

By default, automated backups are created for the List Settings, Archives and Schedules backends.

The List Settings are automatically backed up if the backend is the DBM file. 

The List Archives are automatically backed up if the backend is the DBM file. 

The List Schedules are automatically backed up if the backend is the DBM file. 

Backups are not made for the subscription lists. 

Backups are not made for any of the SQL backends.

The backups are file-based and OS platform neutral.

By default, these backups are stored in the directory set in the Config.pm variable, B<$BACKUPS>. If this variable isn't explicitly set, the directory set in the B<$FILES> variable is used. 

The format seems complex at first, but is really quite simple:

Each list has its own directory, named after the B<list's short name>. The contents of this directory will be three other directories, named, B<archives>, B<schedules> and B<settings> - named appropriately for what information they save. 

Contained in any one of those directories is a list of more directories, named after the UNIX time() they were created. 

In any one of these directories is a list of files. Each file is named after the name of the key and its contents are the values from that key. 

You can reload/reset your list archives/schedules/settings by visiting the following URL in your web browser: 

http://example.com/cgi-bin/dada/mail.cgi?flavor=restore_lists

Where, B<http://example.com/cgi-bin/dada/mail.cgi> 

Is the URL of your Dada Mail installation. 

For more information, see the dada/DADA/App/GenericDBFile/Backup.pm Perl module.

You can set how many copies of backups you'd like to save in the Config.pm variable, %B<BACKUP_HISTORY>

https://dadamailproject.com/support/documentation/global_variables.pod.html#_backup_history


=head2 Usage Logs

The Dada Mail usage logs are saved wherever you've set the Config.pm variable, B<$PROGRAM_USAGE_LOG>

The format is fairly free-form, but does follow some conventions, for example (Instead of newlines, tabs are used): 

 [Tue Jan 16 22:07:54 2007]
 listshortname
 127.0.0.1
 Subscribed to dadatest.list
 email1@example.com

B<[Tue Jan 16 22:07:54 2007]> Apache-style date of the action

B<listshortname> the list's shortname of the list being worked with

B<127.0.0.1> the IP Address that the action was started by 

B<Subscribed to dadatest.list> the action itself

B<email1@example.com> More information about the action, in this case, the email subscribed. 

For more information: 

L<https://dadamailproject.com/support/documentation/Logging_Usage.pm.html>

=head2 Error Logs

The Dada Mail error logs are saved whereer you've set the Config.pm variable, B<$PROGRAM_ERROR_LOG>. 

The format is fairly free-form, but usualy has a Apache-style date stamp, followed by the error/warning reported by the program. 

=head2 Session Information

Dada Mail has two methods it can use to keep state for administrative control panel sessions. 

By default, it uses the CPAN CGI::Session module and supports the following CGI::Session backends: 

=over

=item * PlainText

=item * Db (Berkeley DB File, in this case) 

=item * MySQL

=item * PostgreSQL

=back

The other method is currently known as, "Classic" and is basically the system that was in place before we moved to the CGI::Session module. 

This method using no temporary session keeping file, but rather keeps all information in the web browser's cookie. Because this information includes a password (encrypted), it's not suggested that you use this method, but it's there for backwards compatibility. 

=head2 See Also: 

=over

=item * CGI::Session

L<http://search.cpan.org/~markstos/CGI-Session/lib/CGI/Session.pm>

=item * dada/DADA/App/Session.pm

=back


=cut

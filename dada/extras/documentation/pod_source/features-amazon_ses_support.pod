
=pod

=head1 Amazon SES Integration with Dada Mail

=head2 Introduction

B<From, L<https://aws.amazon.com/ses/>>:

Amazon Simple Email Service (Amazon SES) is a cost-effective email service built on the reliable and scalable infrastructure that Amazon.com developed to serve its own customer base.
 With Amazon SES, you can send and receive email with no required minimum commitments - 
 you pay as you go, and you only pay for what you use.

More Information: L<https://aws.amazon.com/ses/details/>

Dada Mail can utilize Amazon SES to send out email both by using the Amazon SES API, as well as using the Amazon SES SMTP gateway.

Amazon SES is one solution to a problem faced by many people on shared hosting accounts who are faced with the problem that they are sending out too many messages, too quickly for the amount of resources available to them. 

B<Amazon SES costs around $0.10 per I<thousand> messages you send.> See:

L<https://aws.amazon.com/ses/pricing/>

for current pricing. Using the service in a testing, non-production mode is I<free>.

We also provide setting up Dada Mail using your own Amazon SES account as part of our installation/upgrade offerings: 

L<https://dadamailproject.com/installation/request.html>

Our services for installing and configuring Amazon SES for your Dada Mail is a one-time fee. 

=head2 Use for Closed-List Opt-In Subscriptions Lists Only

Since Amazon SES is an outside, third party sending service, you'll need to use a mailing list that's B<100% confirmed opt-in>. If you don't, complaints of abuse sent to Amazon will most likely disallow you from continuing to use  their service. 

=head2 Bounce Handler Support

Here's the overview of Bounce support for SES:
L<http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html>

When you use Dada Mail with SES, Dada Mail I<will> set the C<Return-Path> header explicitly.

Dada Mail's included Bounce Handler has rules specifically for Amazon SES, and we do highly suggest using it, if you use Amazon SES, to comply with their terms of services. 

=head1 Configuration using the SES API

During installation of Dada Mail, you'll need to choose the  B<AWS Region/Endpoint> you would like to utilize, then paste in your B<AWS Access Key ID> and B<AWS Secret Access Key>.

I<That's it.> 

Setting up things on the Amazon AWS side of this equation is a little more involved. We will describe the process below. 

Later, we'll also describe how to set up Dada Mail just to use Amazon SES's SMTP gateway, which does B<not> require you to set up an IAM User and configure the B<AWS Region/Endpoint>, B<AWS Access Key ID>, and B<AWS Secret Access Key> into Dada Mail's configuration. You'll simply need to add the SMTP server, username and password to Dada Mail, like you would for any SMTP Server. 

=head2 Obtaining your AWS Access Key ID and AWS Secret Access Key

=head3 Sign up for Amazon Web Services

If you don't already have an Amazon AWS account, begin the signup procedure for Amazon's AWS: 

L<https://console.aws.amazon.com/>

You'll be asked to create a new Amazon account and give Amazon your payment information. 

For the SES service, there is no upfront cost: you are only billed for what you use. 

=head3 Set up an IAM User

Once you're signed up for AWS sign in (if you aren't already): 

L<http://console.aws.amazon.com/>

We will need to create a new IAM user and add that user to a group that has full access to the SES service. 

On the top bar, click on your name (my name is Justin in this walkthrough), and select, B<My Security Credentials>.


=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-my_security_credentials.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>[Your Name]:My Security Credentials</em> 
</p>

=end html

Once the screen has refreshed: 

Click, B<Users> (I<#1>) on the left hand menu, then, B<Add User> (I<#2>) at the top of the screen. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-users_add_user.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Users: Add User</em> 
</p>

=end html

Once the screen has refreshed:

Under, B<User name> Enter a user name (I<#1>). In this doc, I'm going to enter B<DadaDemo>. 

Under, B<Access type>, select, B<Programmatic access> (I<#2>). 

Then, click the button labeled, B<Next: Permissions> (I<#3>). 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-set_user_details.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Set User Details</em> 
</p>

=end html

Once the screen has refreshed: 

Click the button labeled, B<Create group>. A modal window will be revealed. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-create_group.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Create Group</em> 
</p>

=end html

Under, B<Group name>, enter a group name. (I<#1>). In this doc, I'm going to enter, B<DadaDemoGroup>. 

Now, select a policy. For our needs, we're going to select, B<AmazonSESFullAccess>. You can use enter in, B<SES> in the search filter (I<#2>) to bring down the choices to something managable and easily select, B<AmazonSESFullAccess> (I<#3>)

Click the button labeled, B<Create group> (I<#4>)


=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-select_policy.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Select Policy</em> 
</p>

=end html


Once the screen has refreshed: 

Click the button labeled, B<Next: Review>. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-review.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Review</em> 
</p>

=end html

Once the screen has refreshed: 

Click the button labeled, B<Create user>. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-create_user.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Create Group</em> 
</p>

=end html

Once the screen has refreshed: 

Copy both the, B<Access key ID> (I<#1>) and, B<Secret access key> (I<#2>) and set them aside in a safe place - we'll use them later. 


=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-copy_keys.jpg" width="1024" height="538" style="border:1px solid black" /><br /> 
<em>Create Group</em> 
</p>

=end html


=head2 Set the Access Key ID and Secret Access Key in Dada Mail. 

=head3 Using the Dada Mail Installer

In the Dada Mail Installer, click the button labeled, B<Show/Hide Advanced Options>, then check the checkbox labeled, B<Configure Amazon SES>. 

Textboxes to paste in the B<Endpoint>, B<Access Key ID> and B<Secret Access Key> we just retrieved will be revealed. 

Paste in those two keys, and test them by clicking the button labeled, B<Test Your AWS Credentials>.

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-configure_in_installer.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Configuring SES in the Dada Mail Installer</em> 
</p>

=end html


We'll talk about endpoints a little later, when we talk about Production Access. 


B<Remember:> you can drop into the installer to make additional global configurations, without having to reinstall or upgrade Dada Mail. See: 

L<https://dadamailproject.com/d/install_dada_mail.pod.html#Making-Additional-Global-Configuration-Changes-using-the-Dada-Mail-Installer>

If the credentials work, you'll be told what your current sending quota is.

Complete the installation/configuration by clicking, B<Configure Pro Dada/Dada Mail>

=head3 Manually

The B<Endpoint>, B<Access Key ID>, and B<Secret Access Key> are set in Dada Mail's global configuration file, called, C<.dada_config>. 
Add the following lines I<directly> into your C<.dada_config> file: 

	$AMAZON_SES_OPTIONS = { 
	    AWS_endpoint                     => 'https://email.us-west-2.amazonaws.com/', 
		AWSAccessKeyId                   => 'AKIAI5AOZUGV6XRINNBQ', 
		AWSSecretKey                     => 'cxNzQkJ0v7Y1daQMvUWek3DF8wrkIN1cdAazCmI+', 
		Allowed_Sending_Quota_Percentage => '100',
	};

I<(using your own B<Access Key ID> and B<Secret Access Key>)>. 



=head3 Verifying a Domain with Amazon SES

Verifying a Domain with Amazon SES allows you to use any email address belonging to that domain that you would like for your List Owner and List Admin. 

To verify a domain, sign back into your AWS console. 

Go to B<Services: SES>. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-services_ses.jpg" width="1024" height="437" style="border:1px solid black" /><br /> 
<em>Services: SES</em> 
</p>

=end html

AWS has the idea of B<Endpoints,> so you want to make sure you do all of the following work on the B<same Endpoint> that you've set up Dada Mail to utilize. 
In this doc, we're using the, B<US West (Oregon)> endpoint. 

On the left hand menu, click the, B<Domains> link, then click the, B<Verify a New Domain> button.

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-domains_verify_a_new_domain.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Domains: Verify a New Domain</em> 
</p>

=end html

A modal menu will be revelaed. 

Under, B<Domain> enter the domain you would like to verify (I<#1>). Also make sure to check the, B<Generate DKIM Settings> checkbox (I<#2>). In this doc, we're using, B<dadademo.com> as our domain. 

Click the button labeled, B<Verify This Domain> (I<#3>)

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-verify_domain_details.jpg" width="1024" height="673" style="border:1px solid black" /><br /> 
<em>Domains: Verify a New Domain</em> 
</p>

=end html


A series of C<TXT> and C<CNAME> records will be created for you, 
and AWS will monitor your DNS records to see if those records are set up. 
Once they are, your domain will be verified. 

Click the link labeled, B<Download Record Set as CSV> to download the DNS records you need to set up. 


=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-download_dns_records.jpg" width="1024" height="798" style="border:1px solid black" /><br /> 
<em>Download DNS Records</em> 
</p>

=end html




Here's what they look like for me: 

	"Domain verification record set:"
	"Record name","Record type","Record Value"
	"_amazonses.dadademo.com","TXT","xu84Kjrj3ZKe8ST1Z8DncK7M7l8Bb94CofKOndW0sQ0="

	"Alternate domain verification record:"
	"Record name","Record type","Record Value"
	"dadademo.com","TXT","amazonses:xu84Kjrj3ZKe8ST1Z8DncK7M7l8Bb94CofKOndW0sQ0="

	"DKIM record set:"
	"Record name","Record type","Record Value"
	"juh6ivamg7onz7rn5pbivbc5gdn4chu2._domainkey.dadademo.com","CNAME","juh6ivamg7onz7rn5pbivbc5gdn4chu2.dkim.amazonses.com"
	"7dakxyw3ckpt4dqozfwbq44765b44mxq._domainkey.dadademo.com","CNAME","7dakxyw3ckpt4dqozfwbq44765b44mxq.dkim.amazonses.com"
	"qtq7lvmscivx6ydykg2noh7n5hsbackl._domainkey.dadademo.com","CNAME","qtq7lvmscivx6ydykg2noh7n5hsbackl.dkim.amazonses.com"


We're I<most> concered with the TXT record. The record name is, 

	_amazonses.dadademo.com

and the Record Value is, 

	xu84Kjrj3ZKe8ST1Z8DncK7M7l8Bb94CofKOndW0sQ0

Our website is managed via cPanel - and so is our DNS settings. In our demo, we would log into our cPanel, and go to B<DNS Zone Editor>.
Look under, B<Add DNS Record>:

For, B<Host Record:>, we would paste in, 

	_amazonses.dadademo.com

Change the B<Type> to, C<TXT>, 

For B<Text Value>, we would paste in: 

	xu84Kjrj3ZKe8ST1Z8DncK7M7l8Bb94CofKOndW0sQ0=

Then, we would click the B<add record> button. 

Repeat these steps for the three CNAME records, with a slight change: 

Under B<Type>, select C<CNAME> and not C<TXT>. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-cpanel_add_dns_record.jpg" width="1024" height="672" style="border:1px solid black" /><br /> 
<em>Download DNS Records</em> 
</p>

=end html


If everything is successful, the domain will then be verified. 
You can test to see if the domain is verified back in the Amazon AWS Console. 

=head2 Setting up a Mailing List to use Amazon SES Sending 

Once the AWS B<Endpoint>, B<Access Key ID> and B<Secret Access Key> are configured in Dada Mail, 
you may then set up a mailing list to use SES for sending. 

Log into one of your mailing lists and go to, B<Sending: Options> 

Select, B<Amazon Simple Email Service>, then click, B<Save Changes>

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-dada_mail_sending_options.jpg" width="1024" height="633" style="border:1px solid black" /><br /> 
<em>Download DNS Records</em> 
</p>

=end html

If you haven't already, you'll need to also B<Verify> each sender that'll be using the service. Once you've verified a domain, all addresses under that domain may be used. Any other address will need this verification. 

For Dada Mail, that means verifying the List Owner, and if you're using the Bounce Handler (which you should!), the List Administration email address.  

Under B<Amazon SES Tools> fill in your List Owner's email address, and click, B<Verify>.

That email account will receive an email message from Amazon AWS, with a verification link to click to finish the verification process. 

=head4 Other Ways to Verify a Sender

The Amazon SES Dashboard its
elf allows you to Verify a Sender: 

L<https://console.aws.amazon.com/ses/home?#verified-senders-email:>

Click the button labeled, B<Verify a New Email Address> to get started. 

=head2 Set Your Mass Mailing Batch Settings

When using SES for mail sending in Dada Mail, it's important to keep below the sending quota set by Amazon SES. 
This limit can fluctuate - usually upwards, while you use the service. 

To make things easier, Dada Mail can be set to automatically adjust its Batch Settings to work within your limit.

In Dada Mail's List Control Panel, go to: B<Sending - Mass Mailing Options> and check: 

B<Automatically set batching speeds based on your Amazon SES limits>

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-dada_mail_mass_sending_options.jpg" width="1024" height="543" style="border:1px solid black" /><br /> 
<em>Download DNS Records</em> 
</p>

=end html

Your batch settings will now grow or shrink, depending on your current Amazon SES sending limits. 

If you do go over your total 24 hour quota, mass mailings will not be sent out, and batches will be set to wait for 5 minutes, before trying to be sent again. 
When your 24 hour quota is lifted, sending will once again take place. 

For the most part, Dada Mail will attempt to aggressively keep your batch sending speeds high, until you start coming near your daily mail quota set by SES.

When that happens, batch sending speeds will creep lower, to accomadate your limits. 
At no point should Dada Mail send either faster than it should, either by going over the limit per second limit, or the 24 hour limit. 

Your SES sending limits themselves should creep up, as you use the service. 
Keeping the mass sending rates high will show the Amazon AWS system that you're utilizing the system, and they're most likely going to want to raise the limit for you, without further intervention.

=head1 Configure Dada Mail to use the SMTP Gateway Provided by Amazon SES

Rather than using the API, you can use Amazon SES via its SMTP Gateway. There's a few downsides: if you don't set up a IAM user, you won't get automatic batch settings, sending statistics, and you can't verify a sending witin Dada Mail. Mass mailing may not be as fast.  The advantage may be that it's easier to set up. 

First, sign into your AWS console. 

Go to B<Services: SES>.

Once the screen has refreshed: 

Click, B<SMTP Settings> on the left hand menu. 

Copy the server listed by, B<Server Name>. In my case, it's B<email-smtp.us-west-2.amazonaws.com> 

Click the button labeled, B<Create My SMTP Credentials> 

Once the screen has refreshed:

Optionally change the, B<IAM User Name:>, then click the button labeled, B<Create>

Once the screen has refreshed:

Your SMTP Credentials should be ready to be utilized! Click the link labeled, B<Show User SMTP Security Credentials> to reveal your SMTP credentials. 

The B<SMTP Username> and B<SMTP Password> will be revealed. Copy both these values. 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-smtp_credentials.jpg" width="1024" height="388" style="border:1px solid black" /><br /> 
<em>SMTP Credentials</em> 
</p>

=end html

In Dada Mail's List Control Panel, go to: B<Sending: Options>. 

Select B<SMTP> (and B<NOT> Amazon Simple Email Service) and fill out the B<SMTP Server>. For this demo it's: B<email-smtp.us-west-2.amazonaws.com>. 

Set, B<Port> to, B<465> 

Check, B<Use Secure Sockets Layer (SSL)> 

Check, B<Use SMTP Authentication (SASL)> 

and fill in the B<Username> and B<Password> with what we just created. 

After you've finished, SES should now be set up for your list. Click the button labeled, B<Save, Then Test> to both save and test your new SMTP configuration. A modal window will be revealed, with the results of the test: 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-smtp_test_results.jpg" width="1024" height="626" style="border:1px solid black" /><br /> 
<em>SMTP Test Results</em> 
</p>

=end html

An email will also be sent to the List Owner. B<If that message is received>, the SMTP has been configured correctly, and email sending has been shown to be working: 

=begin html

<p style="text-align:center">
<img src="https://dadamailproject.com/images/support/documentation/v10/ses/ses-smtp_sending_test_email.jpg" width="694" height="584" style="border:1px solid black" /><br /> 
<em>SMTP Test Results</em> 
</p>

=end html

=head2 Request Full Production Access

Once you're done testing Amazon SES with Dada Mail, you'll want to request full production access here: 

L<http://aws.amazon.com/ses/fullaccessrequest>

I<Without> full production access, you'll only be able to send messages to addresses that have been manually verified.

When requesting production access, you'll be asked a few different questions - make sure to take your time and answer these questtions thoughtfully, as
someone will check that your answer comply with the AWS and SES terms of service. 

Of note make sure the following are set: 

=over

=item * Limit Type: SES Sending Limits

=item * Region: Same as Endpoint set up in your Dada Mail install

Remember we set our region to use, B<US West (Oregon)>, so that's what we'd set up here, too. 

=item * Limit: Desired Daily Sending Quota

=item * New limit value: 50000

This could be any number, really, but by default (and as I type this), Amazon SES will give you 50,000 messages you may send out per day by default 
when you ask for Production Access. 

=item * Mail Type: Subscription/Marketing

This will actually be different, depending on how you use Dada Mail. Take your best guess. 

=item * My email-sending complies with the AWS Service Terms and AUP: Yes

=item * I only send to recipients who have specifically requested my mail: Yes

=item * I have a process to handle bounces and complaints: Yes

Most likely, this also means you've set up the B<Bounce Handler> in Dada Mail! 

=item * Use Case Description

This, I feel, is the most important field to fill out. You will want to describe how you intend to use the Amazon SES service. 

Some strong points you will want to consider communicating is that your mailing list only has subscribers that have been verified, 
that you follow ALL best practices for sending out mass mailing, and you have in place ways to deal with bounced messages and complaints. 

You may even want to mention you're using Dada Mail to help handle all this!

=back

Once the form is submitted, it'll take approx. one day to get an answer via email. Once you do get a positive answer, you're ready to use Amazon SES in production. Hurray! 

=head2 Limitations

=head2 Amazon SES API

=head3 Performance 

Sending via Amazon SES is done with a persistent HTTP connection, so performance should be pretty good!. Expect around .3 seconds/message for I<just> passing the email message from Dada Mail to the Amazon SES service. 

=head3 Discussion List Support

Along with the List Owner and List Administration address, be sure to verify the, B<List Email> address with Amazon SES. 


=head3 Different email headers sent

Amazon has a list of supported email headers: 

L<http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/AppendixHeaders.html>

Dada Mail usually sends messages out with a different set of email headers: 

The, B<Message-ID> header will be sent as the, B<X-Message-ID> header. 

The, B<List> header will be sent as the, B<X-List> header. 

Email headers that are not supported by Amazon SES are automatically not sent out. 

=head2 Dependencies

Amazon SES requires a few more CPAN Perl modules than the base Dada Mail install requires. Make sure you already have, or can install the following CPAN Perl modules: 

=over

=item * Cwd

=item * Digest::SHA

=item * URI::Escape

=item * MIME::Base64	

=item * LWP::Protocol::https	

=item * XML::LibXML

=item * LWP

=back

Installing, C<Bundle::DadaMail> alone will install all of the above modules. 

See also the FAQ, B<How do you install, "CPAN Perl Modules"> 

L<https://dadamailproject.com/d/FAQ-installing_CPAN_Perl_modules.pod.html>

=head2 Related Projects

We've seperated out the work we've done with Amazon and using a persistent HTTP connection. That project is located at: 

L<https://github.com/justingit/Net--Amazon--SES>

=cut
